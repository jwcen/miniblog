// Copyright 2024 jayvee <jvvcen@gmail.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// MiniBlog API 定义，包含健康检查、用户管理和文章管理的 RPC 接口
syntax = "proto3";

package v1;

import "google/protobuf/empty.proto";       // 导入空消息
import "apiserver/v1/healthz.proto";        // 健康检查消息定义
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/jwcen/miniblog/pkg/api/apiserver/v1;v1";

// OpenAPI 全局配置，提供详细配置信息，用于生成 OpenAPI 文档
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        // API名称
        title: "miniblog API";
        // API版本
        version: "1.0";
        // API 描述
        description: "";
        // 开发者的联系方式，包括项目名称、网址和电子邮件
        contact: {
            name: "小而美的博客项目";
            url: "https://github.com/jwcen/miniblog";
            email: "jvvcen@gmail.com";
        };
        // 可信息和链接（这里使用 MIT License）
        license: {
            name: "MIT License";
            url: "https://github.com/jwcen/miniblog/blob/master/LICENSE";
        };
    };
    //  指定访问协议为 HTTPS
    schemes: HTTPS;
    // 定义了服务的请求和响应的数据格式为 application/json
    consumes: "application/json";
    produces: "application/json";
};

// MiniBlog 定义了一个 MiniBlog RPC 服务
service MiniBlog {
    // Healthz 健康检查
    rpc Healthz(google.protobuf.Empty) returns (HealthzResponse) {
        // 通过 google.api.http 注释，指定 HTTP 方法为 GET、URL路径为 /healthz
        option (google.api.http) = {
            get: "/healthz"
        };
        
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "服务健康检查";
            // 标识该操作的唯一ID，为 Healthz
            operation_id: "Healthz";
            // 将该接口归类为服务治理
            tags: "服务治理";
        };
    }
}